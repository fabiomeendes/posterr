// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Posterr.Shared.Infra;

#nullable disable

namespace Posterr.Shared.Infra.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Posterr.Shared.Core.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(777)
                        .HasColumnType("nvarchar(777)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PostReferenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PostType")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PostReferenceId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d935e070-dc0e-491b-ad52-a1415385bac5"),
                            Content = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                            CreatedAt = new DateTime(2024, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostType = 0,
                            UserId = new Guid("d5805053-ee9c-47db-8900-18aae2d08f35")
                        },
                        new
                        {
                            Id = new Guid("29d5f8eb-f438-4c83-b98a-b49900cfb625"),
                            Content = "Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.",
                            CreatedAt = new DateTime(2024, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostReferenceId = new Guid("d935e070-dc0e-491b-ad52-a1415385bac5"),
                            PostType = 1,
                            UserId = new Guid("aef145ca-aa9b-4d6f-b8ab-56709b51bb21")
                        });
                });

            modelBuilder.Entity("Posterr.Shared.Core.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("032dd698-7a14-4a84-adf5-ba3b21a28a2a"),
                            CreatedAt = new DateTime(2023, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "user1"
                        },
                        new
                        {
                            Id = new Guid("d5805053-ee9c-47db-8900-18aae2d08f35"),
                            CreatedAt = new DateTime(2024, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "user2"
                        },
                        new
                        {
                            Id = new Guid("5080b484-cd22-4a90-8894-1d5639c930fa"),
                            CreatedAt = new DateTime(2024, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "user3"
                        },
                        new
                        {
                            Id = new Guid("aef145ca-aa9b-4d6f-b8ab-56709b51bb21"),
                            CreatedAt = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Username = "user4"
                        });
                });

            modelBuilder.Entity("Posterr.Shared.Core.Entities.Post", b =>
                {
                    b.HasOne("Posterr.Shared.Core.Entities.Post", "PostReference")
                        .WithMany()
                        .HasForeignKey("PostReferenceId");

                    b.HasOne("Posterr.Shared.Core.Entities.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PostReference");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Posterr.Shared.Core.Entities.User", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
